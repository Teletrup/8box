takeaways
	? Before starting a project think about it's limitations

c++ shenanigans:
	= in class definitions
	unique pointers
	shared pointers
	templates
		avoiding compile time slowdown
		avoiding bloat in general
	noexcept
	constexpr
	move semantics

what can be done
	universal wrapper
		what does it mean:
			any cool application I can think of
		can suck:
			
	8box
	wavy shit
	rendering to texture
		rendering procedure callback?
			which class?
				txmap
					nah:
						needs framebuffer object
				?renderer?
					nah:
						must somehow access texture

		problem of framebuffer state
			python-like with
	tower

todo:
	write comprehensive descriptions of classes
	drawables:
		txmap
			where does the texture live?
				inside
					spec:
					pros:
					cons:
				outside
					spec:
					pros:
					cons:
				either of the above
					spec:
					pros:
						more flexible?
					cons:
						clusterfuck
		lnmap
			can it be efficiently done with instancing?
		text
			glText?
	drawing to a texture
		framebuffer wrapper?
			naaah
		
single buffer for all lines?
	pros:
		arguably a lot faster with multiple drawables
	cons:
		harder to implement
		data structure can't inherit from drawable
	How much overhead is calling gl
